my text = [
    "This is a random text",
    "that will be boxed with this function.",
    "I have set it to be 3"
];

boxify(text, 4);

func boxify(stringsToBox,wOnSides) {
    my index = 0;
    my longestStrLen = 0;

    for stringsToBox -> string {
        my strLength = string.chars();
        if strLength > longestStrLen {
            longestStrLen = strLength;
        }
    }
    my boxWidth = longestStrLen + wOnSides;

    say(generateTop(boxWidth));

    for stringsToBox -> printLn {
        my ln = "║";
        ln = ln ~ generateWSpaceBefore(wOnSides);
        ln = ln ~ printLn;
        ln = ln ~ generateWSpaceAfter(wOnSides,printLn.chars(),longestStrLen);
        ln = ln ~ "║";
        say(ln);
    }
    say(generateBottom(boxWidth));
}

func generateTop(w) {
    my top = "╔";
    my line = "";
    my counter = 0;
    while (counter < (w+2)) {
        line = line ~ "═";
        counter = counter + 1;
    }
    my topLine = ~ top ~ line ~ "╗";
    return topLine;
}

func generateBottom(w) {
    my top = "╚";
    my line = "";
    my counter = 0;
    while (counter < (w+2)) {
        line = line ~ "═";
        counter = counter + 1;
    }
    my topLine = ~ top ~ line ~ "╝";
    return topLine;
}

func generateWSpaceBefore(w) {
    my spaces = w-1;
    my spacesLn = "";
    for ^spaces {
        spacesLn = spacesLn ~ " ";
    }
    return spacesLn;
}

func generateWSpaceAfter(w,this,max) {
    my spaces = max - this + (w-1);

    my spacesLn = "";
    for ^spaces {
        spacesLn = spacesLn ~ " ";
    }
    return spacesLn;
}
